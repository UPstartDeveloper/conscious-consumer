from django.db import models
import django.conf.settings as dj_conf_settings
import conscious_consumer.settings as cc_settings


class Goal(models.Model):
    title = models.CharField(max_length=cc_settings.LABEL_MAX_LENGTH,
                             unique=True,
                             help_text="Title of the goal.")
    author = models.ForeignKey(User, on_delete=models.PROTECT,
                               help_text="The user that posted this article.")
    slug = models.CharField(max_length=cc_settings.LABEL_MAX_LENGTH,
                            blank=True, editable=False,
                            help_text=("Unique URL path to access this goal. "
                                       + "Generated by the system."))
    description = models.TextField(help_text="The full details of the goal.")
    created = models.DateTimeField(auto_now_add=True,
                                   help_text=("The date and time this goal was"
                                              + " created. Automatically " +
                                              "generated when the model " +
                                              "saves."))
    modified = models.DateTimeField(auto_now=True,
                                    help_text=("The date and time this goal " +
                                               "was updated. Automatically " +
                                               "generated when the model " +
                                               "updates."))
    achievements = models.IntegerField(help_text=(
        "The number of time periods you have met this goal. Honor system!"
    ))
    fails = models.IntegerField(help_text=(
        "The number of time periods you have missed this goal. Honor system!"
    ))


class Comment(models.Model):
    user = models.OneToOneField(dj_conf_settings.AUTH_USER_MODEL,
                                on_delete=models.PROTECT,
                                help_text="User who wrote the comment.")
    goal = models.ForeignKey(Goal, on_delete=models.PROTECT,
                             help_text="Goal referred to by the comment.")
    headline = models.CharField(max_length=cc_settings.LABEL_MAX_LENGTH,
                                editable=True, help_text=(
                                 "Main gist of the comment."))
    description = models.TextField(help_text="Full description of comment.")
    last_modified = models.DateTimeField(auto_now_add=True, help_text=(
                                         "The date and time this comment" +
                                         " was last edited. Auto-generated."))

def __str__(self):
    return self.title

def get_absolute_url(self):
    """ Returns a fully-qualified path for a page (/my-new-wiki-page). """
    path_components = {'slug': self.slug}
    return reverse('wiki:wiki-details-page', kwargs=path_components)

def save(self, *args, **kwargs):
    '''Creates a URL safe slug automatically when a new a page is made.'''
    if not self.pk:
        self.slug = slugify(self.title, allow_unicode=True)

    # Call save on the superclass.
    return super(Page, self).save(*args, **kwargs)
