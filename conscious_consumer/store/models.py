from django.db import models
from django.conf import settings as dj_conf_settings
import conscious_consumer.settings.settings as cc_settings
from django.urls import reverse
from django.utils.text import slugify


class Product(models.Model):
    title = models.CharField(
        max_length=cc_settings.LABEL_MAX_LENGTH,
        unique=True,
        help_text="What the product is called.",
    )
    slug = models.CharField(
        max_length=cc_settings.LABEL_MAX_LENGTH,
        blank=True,
        editable=False,
        help_text=(
            "Unique URL path to access this product. " + "Generated by the system."
        ),
    )
    description = models.TextField(
        help_text=(
            "What customers should know."
            + "Please include the link, if you're selling"
            + " on a different website."
        )
    )
    photo = models.ImageField(
        upload_to="images/",
        null=True,
        blank=True,
        default="images/question-mark-md.png",
        help_text="Image of the product, if possible.",
    )
    price = models.FloatField(help_text="Cost of product (USD).")
    seller = models.ForeignKey(
        dj_conf_settings.AUTH_USER_MODEL,
        on_delete=models.PROTECT,
        help_text="User who posted this product.",
    )
    monthly_emission = models.FloatField(
        null=True,
        blank=True,
        help_text=(
            "Metric tons of carbon emitted monthly by someone using this product"
            + " or service."
        ),
    )
    stock = models.IntegerField(
        default=0,
        help_text=(
            "Number of available units/customers you are able to service "
            + "currently. Default value: 0. You can always come update this later."
        ),
    )
    web_link = models.CharField(
        null=True,
        blank=True,
        max_length=1000,
        unique=False,
        editable=True,
        help_text="Link to access payment page.",
    )

    def __str__(self):
        """Return a string representation of the Product."""
        return f"{self.title}"

    def save(self, *args, **kwargs):
        """Creates a URL safe slug automatically for each new product."""
        if not self.pk:
            self.slug = slugify(self.title, allow_unicode=True)

        # Call save on the superclass.
        return super(Product, self).save(*args, **kwargs)

    # Credit for this implementation goes to Dani Roxberry at
    # https://github.com/UPstartDeveloper/makewiki_v2/blob/master/wiki/models.py
    def get_absolute_url(self):
        """Returns a fully-qualified path for a product."""
        path_components = {"slug": self.slug}
        return reverse("store:product_detail", kwargs=path_components)


class Review(models.Model):
    product = models.ForeignKey(
        Product, on_delete=models.PROTECT, help_text="Product being reviewed."
    )
    headline = models.CharField(
        max_length=cc_settings.LABEL_MAX_LENGTH,
        unique=False,
        help_text="Main point of review.",
    )
    description = models.TextField(help_text="Full thoughts on product.")
    author = models.OneToOneField(
        dj_conf_settings.AUTH_USER_MODEL,
        on_delete=models.PROTECT,
        help_text="User leaving the review.",
    )
    rating = models.IntegerField(help_text=("1 to 5 stars, where 5 is highest rating."))
    modified = models.DateTimeField(
        auto_now=True,
        help_text=(
            "The date and time this product "
            + "was posted. Automatically "
            + "generated when the model updates."
        ),
    )

    def __str__(self):
        """Return a string representation of the Review."""
        return f"{self.headline}"

    def get_absolute_url(self):
        """Returns a fully-qualified path for a product related to review."""
        path_components = {"slug": self.product.slug}
        # return reverse('store:product_detail', kwargs=path_components)
